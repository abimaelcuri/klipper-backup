# [gcode_shell_command hello_world]
# command: echo hello world
# timeout: 2.
# verbose: True
# [gcode_macro HELLO_WORLD]
# gcode:
#     RUN_SHELL_COMMAND CMD=hello_world

[gcode_shell_command led_set]
command: sudo /home/abimael/gcode_shell_commands/led.py
timeout: 5
verbose: True

[gcode_macro SET_LED_COLOR]
gcode:
    RUN_SHELL_COMMAND CMD=led_set PARAMS="{params.R} {params.G} {params.B} {params.BRIGHTNESS}"



# ———————————————————————————————————————————————
# Macro: PROGRESS_BAR
#  • Usa printer.print_stats.progress para ler % de impressão
#  • Chama o seu progress.py com:
#      · percent (0–100)
#      · num_leds (padrão 11)
#      · brightness (padrão 100)
# ———————————————————————————————————————————————

[gcode_shell_command progress]
command: sudo /home/abimael/gcode_shell_commands/progress.py
timeout: 5
verbose: True

[gcode_macro PROGRESS_BAR]
gcode:
  # Verifica se os parâmetros CURRENT e TOTAL foram fornecidos
  {% if 'CURRENT' in params and 'TOTAL' in params %}
    # Captura os valores dos parâmetros, garantindo que sejam inteiros
    {% set current_layer = params.CURRENT | default(0) | int %}
    {% set total_layers = params.TOTAL | default(1) | int %} # Default total to 1 to avoid division by zero

    # Configurações para a barra de progresso
    {% set n_leds = 11 %} # Número total de LEDs ou segmentos da barra
    {% set brigth = 100 %} # Brilho máximo (ajuste conforme sua configuração de LED)

    # Calcula a porcentagem
    {% set percent = 0 %} # Inicializa a porcentagem
    {% if total_layers > 0 %}
        {# Calcula a porcentagem: (camada atual / total de camadas) * 100 #}
        {# Multiplica por 100 antes de dividir para manter precisão e depois arredonda #}
        {% set percent = ((current_layer * 100) / total_layers) | round(0) | int %}
        
        {# Opcional: Ajustar porcentagem para 100% na última camada se total_layers == current_layer #}
        {% if current_layer >= total_layers %}
            {% set percent = 100 %}
        {% endif %}

    {% endif %}

    # Log para depuração (opcional)
    {action_print("Camada: " ~ current_layer ~ " de " ~ total_layers ~ " (" ~ percent ~ "%)")}

    # Chama o comando shell 'progress' passando a porcentagem, número de LEDs e brilho
    # Certifique-se de que o comando 'progress' está configurado e funciona
    RUN_SHELL_COMMAND CMD=progress PARAMS="{percent} {n_leds} {brigth}"

  {% else %}
    # Se a macro for chamada sem os parâmetros esperados
    {action_print("REPORT_LAYER_PROGRESS chamado sem parametros CURRENT ou TOTAL.")}
  {% endif %}
  
# gcode:
#     {% set cur = printer.print_stats.info.current_layer|default(0)|int %}
#     {% set tot = printer.print_stats.info.total_layer|default(0)|int %}
#     {% set n_leds = 11 %}
#     {% set brigth = 100 %}
#     {% if tot > 0 %}
#         {% set pct = ((cur / tot) * 100)|round(0) %}
#         RUN_SHELL_COMMAND CMD=progress PARAMS="{pct} {n_leds} {brigth}"
#     {% else %}
#       RUN_SHELL_COMMAND CMD=progress PARAMS="0 {n_leds} {brigth}"
#     {% endif %}

# [gcode_macro PROGRESS_BAR]
# variable_num_leds: 11
# variable_brightness: 4

# gcode:
#     {% set pct = printer["print_stats"]["progress"]|default(0)|round(0) %}
#     RUN_SHELL_COMMAND CMD=progress PARAMS="{pct} {num_leds} {brightness}"